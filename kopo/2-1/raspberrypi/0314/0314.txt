[설치] 
- VNC -> bready / 00000000
- putty


[라즈베리파이]
* DC 서보모터
- Thony 실행 > 입력 > Run > .py 로 저장 > 정지는 Ctrl+c

------------------------------------------
import RPi.GPIO as GPIO
import time
GPIO.setmode(GpIO,BCM)
GPIO.setwarnings(False)
MOTOR_P = 19
MOTOR_M = 13
if __name__ == "__main__":
    GPIO.setup(MOTOR_P, GPIO.OUT)
    GPIO.setup(MOTOR_M, GPIO.OUT)
    try:
        while(True):
            GPIO.output(MOTOR_P, GPIO.HIGH)
            GPIO.output(MOTOR_M, GPIO.LOW)
            print("Clock Wise")
            time.sleep(1)
            GPIO.output(MOTOR_P, GPIO.LOW)
            GPIO.output(MOTOR_M, GPIO.LOW)
            print("Stop")
            time.sleep(1)
            GPIO.output(MOTOR_P, GPIO.LOW)
            GPIO.output(MOTOR_M, GPIO.HIGH)
            print("Count Clock Wise")
            time.sleep(1)
            GPIO.output(MOTOR_P, GPIO.LOW)
            GPIO.output(MOTOR_M, GPIO.LOW)
            print("Stop")
            time.sleep(1)
    except KeyboardInterrupt:
#finally:
        GPIO.cleanup()
----------------------------------------------


* Step motor
- 1

import RPi.GPIO as GPIO
import time
# 스텝모터와 연결된 GPIO 번호를 변수에 저장한다.
STEP_IN1 = 16
STEP_IN2 = 20
STEP_IN3 = 21
STEP_IN4 = 26
pinsArray = [STEP_IN1,STEP_IN2,STEP_IN3,STEP_IN4] 
# 풀 스탭 구동 (1상 여자 방식)
signal_full = [
[GPIO.HIGH, GPIO.LOW, GPIO.LOW, GPIO.LOW],
[GPIO.LOW, GPIO.HIGH, GPIO.LOW, GPIO.LOW],
[GPIO.LOW, GPIO.LOW, GPIO.HIGH, GPIO.LOW],
[GPIO.LOW, GPIO.LOW, GPIO.LOW, GPIO.HIGH]
]
# 1스탭의 사이클
FULL_STEP = len(pinsArray)
ROTATE_360_STEP = 512 # FULL_STEP으로 512스탭
if __name__ == "__main__":
# BCM 핀맵을 사용한다
    GPIO.setmode(GPIO.BCM)
    for p_index in pinsArray:
        GPIO.setup(p_index, GPIO.OUT)
        GPIO.output(p_index, GPIO.LOW)
# 반복하여 모터를 정방향 -> 정지 -> 역방향 -> 정지 순서로 제어한다.
    try:
        for i in range(0,ROTATE_360_STEP):
            for step_idx in range(FULL_STEP):
# GPIO를 제어한다. for문을 통해 코드를 줄일 수 있다.
# GPIO.output(STEP_IN1, signal_full[step_idx][0])
# GPIO.output(STEP_IN2, signal_full[step_idx][1])
# GPIO.output(STEP_IN3, signal_full[step_idx][2])
# GPIO.output(STEP_IN4, signal_full[step_idx][3])
                for idx in range(4):
                    GPIO.output(pinsArray[idx], signal_full[step_idx][idx])
                time.sleep(0.002)
        for i in range(0,ROTATE_360_STEP):
            for step_idx in reversed(range(FULL_STEP)):
# GPIO를 제어한다. for문을 통해 코드를 줄일 수 있다.
# GPIO.output(STEP_IN1, signal_full[step_idx][0])
# GPIO.output(STEP_IN2, signal_full[step_idx][1])
# GPIO.output(STEP_IN3, signal_full[step_idx][2])
# GPIO.output(STEP_IN4, signal_full[step_idx][3])
                for idx in range(4):
                    GPIO.output(pinsArray[idx], signal_full[step_idx][idx])
                time.sleep(0.002)
# 키보드 인터럽트, 에러 등으로 소스가 종료될 경우 GPIO를 초기화한 후 종료한다.
    finally:
        GPIO.cleanup()


- 2

import RPi.GPIO as GPIO
import time
from collections import deque

# 스텝모터와 연결된 GPIO 번호를 변수에 저장한다.
STEP_IN1 = 16
STEP_IN2 = 20
STEP_IN3 = 21
STEP_IN4 = 26
sig=deque([1,0,0,0])
step=2048
dir=1
if __name__ == "__main__":
    GPIO.setmode(GPIO.BCM)
    GPIO.setwarnings(False)
    GPIO.setup(STEP_IN1, GPIO.OUT, initial=GPIO.LOW)
    GPIO.setup(STEP_IN2, GPIO.OUT, initial=GPIO.LOW)
    GPIO.setup(STEP_IN3, GPIO.OUT, initial=GPIO.LOW)
    GPIO.setup(STEP_IN4, GPIO.OUT, initial=GPIO.LOW)
    try:
        while(True):
            for cnt in range(0, step):
                GPIO.output(STEP_IN1,sig[0])
                GPIO.output(STEP_IN2,sig[1])
                GPIO.output(STEP_IN3,sig[2])
                GPIO.output(STEP_IN4,sig[3])
                time.sleep(0.01)
                sig.rotate(dir)
            dir=dir*-1
    except KeyboardInterrupt:
        GPIO.cleanup()




------- 지난주 -------
#include <stdio.h>
#include <wiringPi.h>

#define motor_pin_n 23
#define motor_pin_p 24

int main(){
        wiringPiSetup();

        pinMode(motor_pin_n, OUTPUT);
        pinmode9motorpin_p, OUTPUT);

        digitalWrite(motor_pin_n, LOW);
        digitalWrite(motor_pin_p, HIGH);
        delay(500);

        digitalWrite(motor_pin_n, LOW);
        digitalWrite(motor_pin_p, LOW);
        print("Motor Test");

        return 0;
}
-----------------------------------------

------- 기본 -------
import RPi.GPIO as GPIO
... 
# GPIO setup
GPIO.setmode(GPIO.BCM) 
GPIO.setup(12, GPIO.IN) 
GPIO.setup(18, GPIO.OUT) 
... 
# 메인 쓰레드
try: 
    while 1: 
        button = GPIO.input(12) 
        ... 
        GPIO.output(18, GPIO.HIGH) 
... 
# 반드시 클린업
finally: GPIO.cleanup()
-------------------





