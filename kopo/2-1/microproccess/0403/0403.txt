[마이크로프로세서]
- 하드웨어 구성 중요
- 어떻게 데이터를 쓸 것인가? 중요


[참고]
- 베어팹    https://blog.naver.com/PostView.naver?blogId=emperonics&logNo=221813872752&categoryNo=15&parentCategoryNo=&from=thumbnailList
- led        https://m.blog.naver.com/PostView.naver?blogId=emperonics&logNo=221831160948&navType=by



[디지털 입출력]

*** 출력 여러 개

** LED 4개 연결

- 순차 제어
-------------------------------------------------
from gpiozero import LED
from time import sleep

led1 = LED(4)
led2 = LED(17)
led3 = LED(27)
led4 = LED(22)

while True:
	led1.on()
	sleep(1)
	led1.off()
	sleep(1)

	led2.on()
	sleep(1)
	led2.off()
	sleep(1)

	led3.on()
	sleep(1)
	led3.off()
	sleep(1)

	led4.on()
	sleep(1)
	led4.off()
	sleep(1)
--------------------------------------------------

- 전체 on/off
-------------------------------------------------
from gpiozero import LED
from time import sleep

led1 = LED(4)
led2 = LED(17)
led3 = LED(27)
led4 = LED(22)

while True:
	led1.on()
	led2.on()
	led3.on()
	led4.on()
	sleep(1)

	led1.off()
	led2.off()
	led3.off()
	led4.off()
	sleep(1)
--------------------------------------------------

- 파도타기
-------------------------------------------------
from gpiozero import LED
from time import sleep

led1 = LED(4)
led2 = LED(17)
led3 = LED(27)
led4 = LED(22)

while True:
	led1.on()
	sleep(1)
	led2.on()
	sleep(1)
	led3.on()
	sleep(1)
	led4.on()
	sleep(1)

	led4.off()
	sleep(1)
	led3.off()
	sleep(1)
	led2.off()
	sleep(1)
	led1.off()
	sleep(1)
--------------------------------------------------

- 밝게 조절
--------------------------------------------------
from gpiozero import PWMLED        //gpiozero모듈에서 PWMLED 클래스 불러오기
from time import sleep             //time 모듈에서 sleep함수 불러오기
 
pwmled = PWMLED(4)                    // pwmled라는 객체 생성
brightrange=[x*0.01 for x in range(0,100)]        //밝기 범위를 입력해주기 위한 값 생성, 파이썬은 for 문에서 실수사용이 안되어 따로 이렇게 자료를 만듦

while True:
     for brightness in brightrange:           //0에서 1까지의 밝기값변화에 따라 반복실행
          pwmled.value=brightness             //pwmled의 밝기를 바꿔줌.
          print(led.value)                   //밝기값 터미널 창에 출력
          sleep(0.05)                       // 5ms대기

     for brightness in reversed(brightrange):    //1에서 0까지의 밝기값변화에 따라 반복실행
          pwmled.value=brightness               //pwmled의 밝기를 바꿔줌.
          print(led.value)                     //밝기값 터미널 창에 출력
          sleep(0.05)                           //밝기값 출력
--------------------------------------------------



[입력]

** 버튼
--------------------------------------------------
from gpiozero import Button                   //gpiozero 모듈에서 Button 클래스 불러오기
from time import sleep                        //time 모듈에서 sleep함수 불러오기
  
button = Button(4)                             // Button클래스를 사용해서 button객체 생성
  
while True:
     if button.is_pressed:                     // 버튼이 눌리면
          print("Button is pressed")          // 버튼이 눌렸다는 메시지 출력
          sleep(0.1)                          //0.1초 대기
     else:                                   //버튼이 눌리지 않으면
          print("Button is not pressed")     //버튼이 안 눌렸다는 메시지 출력   
          sleep(0.1)                         //0.1초 대기  
--------------------------------------------------